name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: pnpm

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next
          enablement: true

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Install dependencies
        run: pnpm install

      - name: Build with Next.js (with static export)
        run: pnpm build
        env:
          NODE_ENV: production

      - name: List contents after build
        run: |
          echo "=== Root directory ==="
          ls -la
          echo ""
          if [ -d "out" ]; then
            echo "✅ out directory exists"
            echo "Contents of out directory:"
            ls -la out/
            echo ""
            echo "Sample files in out:"
            find out -type f -name "*.html" | head -5
          else
            echo "❌ out directory does not exist"
          fi
          echo ""
          if [ -d ".next" ]; then
            echo "Contents of .next directory:"
            ls -la .next/
          else
            echo ".next directory does not exist either"
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4